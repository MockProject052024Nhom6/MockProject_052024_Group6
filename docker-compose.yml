version: "3.9"

services:
  mssql-server:
    container_name: sql-server
    image: mcr.microsoft.com/mssql/server:latest
    restart: always
    env_file: .env
    ports:
      - "${SQLSERVER_LOCAL_PORT}:${SQLSERVER_DOCKER_PORT}"
    environment:
      SA_PASSWORD: ${SQLSERVER_SA_PASSWORD}
      ACCEPT_EULA: Y
    volumes:
      - sqlserver-data:/var/opt/mssql
    networks:
      - auction
    command: >
      /bin/bash -c "
      /opt/mssql/bin/sqlservr &
      sleep 15;
      echo 'Waiting for SQL Server to be ready...';
      until /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ${SQLSERVER_SA_PASSWORD} -Q 'SELECT 1'; do
        >&2 echo 'SQL Server is starting up';
        sleep 1;
      done;
      echo 'SQL Server is up - executing init script';
      /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ${SQLSERVER_SA_PASSWORD} -Q 'IF NOT EXISTS (SELECT * FROM sys.databases WHERE name = \"${SQLSERVER_DATABASE}\") CREATE DATABASE ${SQLSERVER_DATABASE};';
      wait
      "

  api-service:
    container_name: api-service-spring
    env_file: .env
    restart: always
    image: phhtruc/auctionmanagement-api-service-1.1:1.1
    ports:
      - "${SPRING_LOCAL_PORT}:${SPRING_DOCKER_PORT}"
    environment:
      SPRING_APPLICATION_JSON: '{
                   "spring.datasource.url"  : "jdbc:sqlserver://mssql-server:${SQLSERVER_DOCKER_PORT};databaseName=${SQLSERVER_DATABASE};encrypt=true;trustServerCertificate=true",
                   "spring.datasource.username" : "sa",
                   "spring.datasource.password" : "${SQLSERVER_SA_PASSWORD}",
                   "spring.jpa.hibernate.ddl-auto" : "update",
                   "hibernate.dialect" : "org.hibernate.dialect.SQLServerDialect"
                 }'
    volumes:
      - .m2:/root/.m2
    networks:
      - auction
    depends_on:
      - mssql-server

volumes:
  sqlserver-data:

networks:
  auction:
    driver: bridge